SELECT location, date, total_cases, new_cases, total_deaths, population FROM CovidDeaths
WHERE continent IS NOT NULL AND continent != ""
ORDER BY location, date;
 
--LOOKING AT PERCENTAGE OF DEATHS OUT OF TOTAL CASES
 
      SELECT location, date, total_cases, total_deaths, (total_deaths*1.0/total_cases)*100 AS death_percentage FROM CovidDeaths
      WHERE location LIKE '%states%'
      AND continent IS NOT NULL AND continent != ""
      ORDER BY location, date;

--LOOKING AT TOTAL CASES V POPULATION (i.e. what % of population got Covid)
 
      SELECT location, date, total_cases, population, (total_cases*1.0/population)*100 AS cases_percentageOfPop FROM CovidDeaths
      WHERE location LIKE '%states%'
      AND continent IS NOT NULL AND continent != ""
      ORDER BY location, date;
 
--WHAT COUNTRIES HAVE HIGHEST INFECTION RATES PER POPULATION

      SELECT location, population, MAX(total_cases) AS highest_infectionCount, MAX(total_cases*1.0/population)*100 AS percent_population_infected FROM CovidDeaths
      WHERE continent IS NOT NULL AND continent != ""
      GROUP BY location, population
      ORDER BY percent_population_infected DESC;

--WHAT COUNTRIES HAVE HIGHEST DEATH RATES PER POPULATION

      SELECT location, population, MAX(total_deaths) AS highest_deathCount, MAX(total_deaths*1.0/population)*100 AS percent_population_dead FROM CovidDeaths
      WHERE continent IS NOT NULL AND continent != ""
      GROUP BY location, population
      ORDER BY percent_population_dead DESC;

--WHAT COUNTRIES HAVE HIGHEST DEATH RATES TOTAL

      SELECT location, MAX(CAST(total_deaths AS INT)) AS highest_deathCount FROM CovidDeaths
      WHERE continent IS NOT NULL AND continent != ""
      GROUP BY location, population
      ORDER BY highest_deathCount DESC;
 
--BROKEN DOWN BY CONTINENT, WHAT CONTINENT HAS THE HIGHEST DEATH RATES TOTAL

      SELECT location, MAX(CAST(total_deaths AS INT)) AS highest_deathCount FROM CovidDeaths
      WHERE continent IS NULL OR continent = ""
      GROUP BY location
      ORDER BY highest_deathCount DESC;
 
--GLOBAL NUMBERS BY DAY

      SELECT date, SUM(CAST(new_cases AS INT)) AS GlobalNewCases, SUM(CAST(new_deaths AS INT)) AS GlobalNewDeaths, SUM(CAST(new_deaths AS INT))*1.0/SUM(CAST(new_cases AS INT))*100 AS GlobalDeathPercentage FROM CovidDeaths
      WHERE continent IS NOT NULL AND continent != ""
      GROUP BY date
      ORDER BY date, GlobalNewCases;
 
--GLOBAL NUMBERS IN TOTAL

      SELECT SUM(CAST(new_cases AS INT)) AS GlobalNewCases, SUM(CAST(new_deaths AS INT)) AS GlobalNewDeaths, SUM(CAST(new_deaths AS INT))*1.0/SUM(CAST(new_cases AS INT))*100 AS GlobalDeathPercentage FROM CovidDeaths
      WHERE continent IS NOT NULL AND continent != ""
      ORDER BY GlobalNewCases;
 
--Looking at Total Populations vs Vaccinations
 
      SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
      SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated,
      (RollingPeopleVaccinated*1.0/population)*100
      FROM CovidDeaths dea 
      JOIN CovidVaccinations vac ON dea.location = vac.location AND dea.date = vac.date
      WHERE dea.continent IS NOT NULL AND dea.continent != ""
      ORDER BY 2, 3;
 
--USE CTE
 
      WITH PopVsVac (continent, location, date, population, new_vaccinations, RollingPeopleVaccinated)
      AS
      (
      SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
      SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
      FROM CovidDeaths dea 
      JOIN CovidVaccinations vac ON dea.location = vac.location AND dea.date = vac.date
      WHERE dea.continent IS NOT NULL AND dea.continent != ""
      ORDER BY 2, 3
      )
 
      SELECT *, (RollingPeopleVaccinated*1.0/population)*100 FROM PopVsVac;
 
--TEMP TABLE

      DROP TABLE IF EXISTS PercentPopulationVaccinated;
      CREATE TEMP TABLE PercentPopulationVaccinated
      AS
      SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
      SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
      FROM CovidDeaths dea 
      JOIN CovidVaccinations vac ON dea.location = vac.location AND dea.date = vac.date
      WHERE dea.continent IS NOT NULL AND dea.continent != ""
      ORDER BY 2, 3;
 
      SELECT * FROM PercentPopulationVaccinated;
 
--CREATE VIEW TO STORE DATA FOR FUTURE VISUALIZATIONS
 
      CREATE VIEW PercentPopulationVaccinated AS
      SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
      SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
      FROM CovidDeaths dea 
      JOIN CovidVaccinations vac ON dea.location = vac.location AND dea.date = vac.date
      WHERE dea.continent IS NOT NULL AND dea.continent != "";

      SELECT * FROM PercentPopulationVaccinated;
